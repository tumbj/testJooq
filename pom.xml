<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>teamPanut</groupId>
    <artifactId>testJooq</artifactId>
    <version>1.0-SNAPSHOT</version>

    <dependencies>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.11</version>
      </dependency>

        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
            <version>3.8.7</version>
        </dependency>

        <!--<dependency>-->
            <!--<groupId>postgresql</groupId>-->
            <!--<artifactId>postgresql</artifactId>-->
            <!--<version>9.1-901-1.jdbc4</version>-->
        <!--</dependency>-->

    </dependencies>


 <!---->
                        <!--<goal>generate</goal>-->
                    <!--</goals>-->
                    <!--<configuration>-->

                        <!--<jdbc>-->
                            <!--<driver>org.postgresql.Driver</driver>-->
                            <!--<url>jdbc:mysql://localhost/university</url>-->
                            <!--<user>tum</user>-->
                            <!--<password>password</password>-->
                        <!--</jdbc>-->
                        <!--<generator>-->

                             <!--<database>-->
                                <!--<name>org.jooq.util.postgres.PostgresDatabase</name>-->
                                <!--<includes>.*</includes>-->
                                <!--<excludes></excludes>-->
                                <!--<inputSchema>public</inputSchema>-->
                             <!--</database>-->

                            <!--<target>-->
                                <!--<packageName>org.thoughts.on.java.db</packageName>-->
                                <!--<directory>target/generated-sources/jooq</directory>-->
                            <!--</target>-->
                        <!--</generator>-->
                    <!--</configuration>-->
                <!--</execution>-->
            <!--</executions>-->
        <!--</plugin>-->


        <!--</plugins>-->
    <!--</build>-->


        <!--<build>-->
            <!--&lt;!&ndash;<plugins>&ndash;&gt;-->



                <!--<configuration xmlns="http://www.jooq.org/xsd/jooq-codegen-3.8.7.xsd">-->
                    <!--&lt;!&ndash; Configure the database connection here &ndash;&gt;-->
                <!--<jdbc>-->
                    <!--<driver>com.mysql.jdbc.Driver</driver>-->
                    <!--<url>jdbc:mysql://localhost:3306/university</url>-->
                    <!--<user>tum</user>-->
                    <!--<password>password</password>-->
                <!--</jdbc>-->

                    <!--<generator>-->
                        <!--&lt;!&ndash; The default code generator. You can override this one, to generate your own code style.-->
                             <!--Supported generators:-->
                              <!-- - org.jooq.util.JavaGenerator-->
                              <!-- - org.jooq.util.ScalaGenerator-->
                             <!--Defaults to org.jooq.util.JavaGenerator &ndash;&gt;-->
                        <!--<name>org.jooq.util.JavaGenerator</name>-->

                        <!--<database>-->
                            <!--&lt;!&ndash; The database type. The format here is:-->
                                 <!--org.util.[database].[database]Database &ndash;&gt;-->
                            <!--<name>org.jooq.util.mysql.MySQLDatabase</name>-->

                            <!--&lt;!&ndash; The database schema (or in the absence of schema support, in your RDBMS this-->
                                 <!--can be the owner, user, database name) to be generated &ndash;&gt;-->
                            <!--<inputSchema>university</inputSchema>-->

                            <!--&lt;!&ndash; All elements that are generated from your schema-->
                                 <!--(A Java regular expression. Use the pipe to separate several expressions)-->
                                 <!--Watch out for case-sensitivity. Depending on your database, this might be important! &ndash;&gt;-->
                            <!--<includes>.*</includes>-->

                            <!--&lt;!&ndash; All elements that are excluded from your schema-->
                                 <!--(A Java regular expression. Use the pipe to separate several expressions).-->
                                 <!--Excludes match before includes, i.e. excludes have a higher priority &ndash;&gt;-->
                            <!--<excludes></excludes>-->
                        <!--</database>-->

                        <!--<target>-->
                            <!--&lt;!&ndash; The destination package of your generated classes (within the destination directory) &ndash;&gt;-->
                            <!--<packageName>testJooq.generated</packageName>-->

                            <!--&lt;!&ndash; The destination directory of your generated classes. Using Maven directory layout here &ndash;&gt;-->
                            <!--<directory>target/generated-sources/jooq</directory>-->
                        <!--</target>-->
                    <!--</generator>-->
                <!--</configuration>-->
            <!--&lt;!&ndash;</plugins>&ndash;&gt;-->
        <!--&lt;!&ndash;</build>&ndash;&gt;-->
    <build>
        <plugins>
            <plugin>
              <!--test-->
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>3.8.7</version>
                <executions>
                    <execution>


                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>

                        </goals>

                        <inherited>true</inherited>

                        <!--//test-->
                        <id></id>
                        <!--test-->
                        <configuration>
                            <!--<configuration xmlns="http://www.jooq.org/xsd/jooq-codegen-3.8.7.xsd">-->
                            <!-- Configure the database connection here -->

                            <jdbc>
                                <driver>com.mysql.jdbc.Driver</driver>
                                <url>jdbc:mysql://localhost:3306/university</url>
                                <user>tum</user>
                                <password>password</password>

                            </jdbc>

                            <generator>
                                <!-- The default code generator. You can override this one, to generate your own code style.
                                     Supported generators:
                                     - org.jooq.codegen.JavaGenerator
                                     - org.jooq.codegen.ScalaGenerator
                                     Defaults to org.jooq.codegen.JavaGenerator -->
                                <name>org.jooq.codegen.JavaGenerator</name>

                                <database>
                                    <!-- The database type. The format here is:
                                         org.util.[database].[database]Database -->
                                    <name>org.jooq.meta.mysql.MySQLDatabase</name>

                                    <!-- The database schema (or in the absence of schema support, in your RDBMS this
                                         can be the owner, user, database name) to be generated -->
                                    <inputSchema>university</inputSchema>

                                    <!-- All elements that are generated from your schema
                                         (A Java regular expression. Use the pipe to separate several expressions)
                                         Watch out for case-sensitivity. Depending on your database, this might be important! -->
                                    <includes>.*</includes>

                                    <!-- All elements that are excluded from your schema
                                         (A Java regular expression. Use the pipe to separate several expressions).
                                         Excludes match before includes, i.e. excludes have a higher priority -->
                                    <excludes></excludes>
                                </database>

                                <target>
                                    <!-- The destination package of your generated classes (within the destination directory) -->
                                    <packageName>test.generated</packageName>

                                    <!-- The destination directory of your generated classes. Using Maven directory layout here -->
                                    <directory>target/generated-sources/jooq</directory>
                                </target>
                            </generator>

                        </configuration>
                    </execution>
                </executions>
            </plugin>
         </plugins>
        </build>
</project>